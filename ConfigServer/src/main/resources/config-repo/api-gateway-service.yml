server:
  port: 80
spring:
  zipkin:
    enabled: true
    base-url: http://10.4.0.7:9411
    service:
      name: api-gateway-service
  main:
    web-application-type: reactive
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods:
              - GET
              - POST
      default-filters:
        - RewritePath= /(?<segment>.*), /api/v1/$\{segment}
      routes:
        # id tanımlanacak yönlendirme işlemini adı dır, burada gateway e gelen isteğin
        # yakalanarak iletilmesi gereken adrese iletilmesi işlemi yapılır.
        # http://localhost/auth/******  -> http://localhost:9090/auth/*****
#        http://localhost/auth/message -> http://localhost:9090/api/v1/message
        - id: auth-micro-service
          predicates:
            - Path=/auth/**
          uri: http://10.8.12.204:9090
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
#            Burada amaçlanan eğer yönlendirme yapmak istediğimiz microservice o an çalışmıyor
#            ise bizim apigateway üzerinde yazdığımız bir adrese yönlendirmemiz şeklinde iş görür
            - name: CircuitBreaker
              args:
                name: auth
                fallbackUri: forward:/fallbackauth
        - id: user-micro-service
          predicates:
            - Path=/user/**
          uri: http://10.8.9.79:9093
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
            - name: CircuitBreaker
              args:
                name: auth
                fallbackUri: forward:/fallbackuser

logging:
  level:
    org.springframework: DEBUG
    com.muhammet: INFO
    root: DEBUG
  file:
    name: api-gateway.log
  logback:
    rollingpolicy:
      max-file-size: 20MB